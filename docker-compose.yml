version: '3.9'
services:
  prometheus:
    image: prom/prometheus:latest
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 5s
      timeout: 2s
      retries: 10
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI
      - "14269:14269" # Prometheus metrics endpoint
      - "4317:4317"     # OTLP gRPC
      - "4318:4318"     # OTLP HTTP

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_healthy
  mcp:
    build:
      context: .
      dockerfile: dockerfile.mcp
      args:
        AGENT_NAME: ${AGENT_NAME}
    container_name: saop-mcp
    environment:
      MCP_HOST: 0.0.0.0
      MCP_PORT: 9000
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9000/mcp > /dev/null || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 10
  app:
    build:
      context: .
      args:
        AGENT_NAME: ${AGENT_NAME}
    container_name: test-saop-app
    env_file:
      - ./.agent.env
    ports:
      - "8000:8000"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_TRACES_EXPORTER: otlp
      MCP_BASE_URL: http://mcp:9000/mcp
    depends_on:
      prometheus:
        condition: service_healthy
      grafana:
        condition: service_started
      jaeger:
        condition: service_started
      mcp:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 2s
      retries: 10
volumes:
  grafana-data: {}
